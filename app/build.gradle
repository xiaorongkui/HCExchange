apply plugin: 'com.android.application'
apply plugin: 'walle'
import com.android.build.gradle.api.BaseVariant

def releaseTime() {
    return new Date().format("yyyy-MM-dd");
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.hacai.exchange"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "V1.0.2"
        multiDexEnabled true
        resConfigs "zh"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true    //加上这行即可，加入thinker
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
//     保证其他的lib没有被preDex
//    dexOptions {
//        dexInProcess true
//        preDexLibraries true
//        javaMaxHeapSize "4g"//越大越好
//    }
    lintOptions {//有任何的错误检查都会终止构建
        abortOnError false
    }
    signingConfigs {
        debug {
            keyAlias 'hacai'
            keyPassword 'hacaihacai123'
            storeFile file('../../haCaiKeyStore.jks')
            storePassword 'hacaihacai123'
//            v2SigningEnabled false
        }
        release {
            keyAlias 'hacai'
            keyPassword 'hacaihacai123'
            storeFile file('../../haCaiKeyStore.jks')
            storePassword 'hacaihacai123'
        }
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "LOG_DEBUG", "true")//全局的变量配置
            /* versionNameSuffix "-debug" //VERSION_NAME的名字*/
            minifyEnabled false //混淆
            zipAlignEnabled false //zip优化
            shrinkResources false//移除无用的resource文件
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField("boolean", "LOG_DEBUG", "false")//禁止日志的打印
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release //签名
        }
    }
    /*应用市场打包的包名设置*/
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
//            outputFileName = "HCExchange_${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk";
            outputFileName = "HCExchange_${defaultConfig.versionName}_${releaseTime()}_empty.apk";
        }
    }
//    /*多渠道打包*/
//    flavorDimensions "market"
//    productFlavors {
//        baidu { dimension "market" }
//        alibaba { dimension "market" }
//        tencent { dimension "market" }
//        c360 { dimension "market" }
//    }
//    /*或者wandoujia {manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]}也可以设置*/
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
//    }
}
sourceSets {
    main {
        java.srcDirs = ['src/main/java', 'src/main/javaGen', 'src/main/jniLibs', 'src/main/assets']
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:26.0.0'
    compile 'com.android.support:recyclerview-v7:26.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
//    // MultiDex的依赖
//    compile 'org.robolectric:shadows-multidex:3.4-rc2'
    //图片加载工具类
    compile 'com.github.bumptech.glide:glide:3.7.0'
    //rxjava
    compile 'io.reactivex:rxjava:1.2.5'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.trello:rxlifecycle:1.0'
    //用于管理rx的生命周期的
    compile 'com.trello:rxlifecycle-components:1.0'
    //retrofit
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.0.0'
    //okhttp
    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation files('libs/afinal_0.5.1_bin.jar')
    implementation 'com.android.support:design:26.0.2'
    implementation 'com.android.support:cardview-v7:26.0.2'
    compile 'com.androidkun:XTabLayout:1.1.3'
    compile(name: 'pdfviewlibrary-release', ext: 'aar')

    //友盟统计依赖
    compile 'com.umeng.analytics:analytics:latest.integration'

    //多渠道打包
    compile 'com.meituan.android.walle:library:1.1.6'
    //权限申请compile 'com.yanzhenjie:permission:1.1.0'
    implementation 'com.yanzhenjie:permission:1.1.0'

    // 多dex 打包的类库
    compile "com.android.support:multidex:1.0.2"
}

tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}

//greendao {
//    schemaVersion 1
//    daoPackage 'com.hacai.exchange.network.cookie.greendao'
//    targetGenDir 'src/main/java/'
//}

walle {
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
//    apkFileNameFormat = '${appName}-${packageName}-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}-${flavorName}.apk'
    apkFileNameFormat = 'HCExchange_${buildType}_${versionName}_${versionCode}_${buildTime}_${channel}.apk'
    //configFile与channelFile两者必须存在一个，否则无法生成渠道包。两者都存在时优先执行configFile
    channelFile = new File("${project.getProjectDir()}/channel")
    //configFile = new File("${project.getProjectDir()}/config.json")
}

// 根据不同的applicationId来配置不同的channelFile／configFile
afterEvaluate {
    project.android.applicationVariants.all { BaseVariant variant ->
        variant.assemble.doFirst {
            if (variant.applicationId.endsWith(".debug")) {
                project.walle.channelFile = new File("${project.getProjectDir()}/channel_debug")
            }
        }
    }
}
